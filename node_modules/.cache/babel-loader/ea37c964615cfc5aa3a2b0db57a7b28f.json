{"ast":null,"code":"import _slicedToArray from \"/Users/tonylomax/Documents/Projects/PayMe/pay_me/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tonylomax/Documents/Projects/PayMe/pay_me/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport CheckoutForm from \"./components/CheckoutForm\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LandingPage from \"./pages/LandingPage\";\nimport Spinner from \"./components/LoadingSpinner\";\nimport Images from \"./components/Images\";\nimport Buttons from \"./components/Buttons\";\n\nfunction App() {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        uploading = _React$useState2[0],\n        setUploading = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        images = _React$useState4[0],\n        updateImages = _React$useState4[1];\n\n  const onChange = e => {\n    const files = Array.from(e.target.files);\n    setUploading(true);\n    const formData = new FormData();\n    files.forEach((file, i) => {\n      formData.append(i, file);\n    });\n    fetch(\"http:localhost:3000/image-upload\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json()).then(images => {\n      setUploading(false);\n      updateImages(images);\n    });\n  };\n\n  const removeImage = id => {\n    updateImages(images.filter(image => image.public_id !== id));\n  };\n\n  const content = () => {\n    switch (true) {\n      case uploading:\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n\n      case images.length > 0:\n        return React.createElement(Images, {\n          images: images,\n          removeImage: removeImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(Buttons, {\n          onChange: onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n    }\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" PayMe \"), React.createElement(StripeProvider, {\n    apiKey: \"pk_test_jSGnscJeo0pSlsqrTBlpNfFX00w04GKHar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"React Stripe Elements Example\"), React.createElement(Elements, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(CheckoutForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, content())));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tonylomax/Documents/Projects/PayMe/pay_me/src/App.js"],"names":["React","Component","Elements","StripeProvider","CheckoutForm","LandingPage","Spinner","Images","Buttons","App","useState","uploading","setUploading","images","updateImages","onChange","e","files","Array","from","target","formData","FormData","forEach","file","i","append","fetch","method","body","then","res","json","removeImage","id","filter","image","public_id","content","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport CheckoutForm from \"./components/CheckoutForm\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LandingPage from \"./pages/LandingPage\";\n\nimport Spinner from \"./components/LoadingSpinner\";\nimport Images from \"./components/Images\";\nimport Buttons from \"./components/Buttons\";\n\nfunction App() {\n  const [uploading, setUploading] = React.useState(false);\n  const [images, updateImages] = React.useState([]);\n\n  const onChange = e => {\n    const files = Array.from(e.target.files);\n    setUploading(true);\n\n    const formData = new FormData();\n\n    files.forEach((file, i) => {\n      formData.append(i, file);\n    });\n\n    fetch(`http:localhost:3000/image-upload`, {\n      method: \"POST\",\n      body: formData\n    })\n      .then(res => res.json())\n      .then(images => {\n        setUploading(false);\n        updateImages(images);\n      });\n  };\n  const removeImage = id => {\n    updateImages(images.filter(image => image.public_id !== id));\n  };\n\n  const content = () => {\n    switch (true) {\n      case uploading:\n        return <Spinner />;\n      case images.length > 0:\n        return <Images images={images} removeImage={removeImage} />;\n      default:\n        return <Buttons onChange={onChange} />;\n    }\n  };\n\n  return (\n    <section>\n      <h1> PayMe </h1>\n      {/* <LandingPage></LandingPage> */}\n      <StripeProvider apiKey=\"pk_test_jSGnscJeo0pSlsqrTBlpNfFX00w04GKHar\">\n        <div className=\"example\">\n          <h1>React Stripe Elements Example</h1>\n          <Elements>\n            <CheckoutForm />\n          </Elements>\n        </div>\n      </StripeProvider>\n\n      <div>\n        <div className=\"buttons\">{content()}</div>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}